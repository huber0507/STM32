/*********************************************************************************************/
【*】程序简介

-工程名称：SPI-FatFs 功能使用实验
-实验平台: 野火STM32 F103-霸道 开发板 


【 ！】功能简介：
把FLASH芯片格式化成文件系统，使可以文件系统的方式读写文件数据
学习目的：学习文件系统在flash上的移植和应用。

【 ！！】注意事项：
-需要添加FATFS文件夹到工程的 include 选项中：
打开工程选项对话框，选择“C/C++”选项下的“Include Paths”项目，
在弹出路径设置对话框中选择添加“FATFS”文件夹和“FATFS”下的“option”子文件夹


FLASH芯片出厂前已有烧录数据，具体见下文FLASH使用情况说明。

【 ！】实验操作：
电脑端使用串口调试助手，选择电脑与STM32相连的COM口，COM口的具体数字由设备管理器中CH340设备对应的数字，
在串口调试助手中设置波特率、校验位、数据位、停止位分别为：115200-N-8-1，然后打开串口。
复位开发板，即可接收STM32串口发送给电脑的调试信息。



/***************************************************************************************************************/

【 ！】外部Flash使用情况说明（W25Q64）	

 * 以下的图用keil5或者notepad++打开就不会出现起始地址与长度说明飘出去的现象



|-------------------------------------------------------------------------------------------------------------------|												
|序号	|文件名/工程					|功能										|起始地址		|长度			|
|-------|---------------------------|-------------------------------------------|---------------|-------------------|
|1		|外部flash读写例程			|预留给裸机Flash测试						|0				|1024 (BYTE)		|
|-------|---------------------------|-------------------------------------------|---------------|-------------------|
|2		|裸机触摸屏例程				|裸机触摸校准参数							|1024			|2*1024(BYTE)		|
|-------|---------------------------|-------------------------------------------|---------------|-------------------|
|3		|裸机中文显示例程（旧版）	|裸机中文字库（HZLIB.bin）					|4096			|53*4096 (212KB)	|
|-------|---------------------------|-------------------------------------------|---------------|-------------------|
|4		|emwin综合例程 app.c		|XBF字库文件（emWin使用,songti.xbf）		|60*4096		|317*4096 (1.23MB)	|
|-------|---------------------------|-------------------------------------------|---------------|-------------------|
|5		|裸机中文显示例程（新版）	|裸机中文字库（GB2312_H1616.FON）			|387*4096		|64*4096 (256KB)	|
|-------|---------------------------|-------------------------------------------|---------------|-------------------|
|6		|emwin综合例程				|文件系统中文支持字库(emWin使用,UNIGBK.BIN)	|465*4096		|43*4096 (172KB)	|
|-------|---------------------------|-------------------------------------------|---------------|-------------------|
|7		|Touch_CalibrationApp.c		|电阻屏触摸校准参数（emWin使用）			|510*4096		|34 (BYTE)			|
|-------|---------------------------|-------------------------------------------|---------------|-------------------|
|8		|SPIFLASH FATFS例程			|FATFS文件系统								|512*4096		|1536*4096 (6MB)	|
|-------|---------------------------|-------------------------------------------|---------------|-------------------|


* FLASH芯片从编号512-1536扇区是专门预留给文件系统的，其位置及容量为FLASH芯片的 后6MB。
 若用户有特殊需求，可修改文件系统的格式化接口，通过它设置文件系统的大小，
 fatfs_flash_spi.c的TM_FATFS_FLASH_SPI_disk_ioctl函数。

 
*关于以上表格的更多说明请看库例程文件夹内《刷外部FLASH程序（刷资源文件在外部FLASH）》里的说明
 
/*******************************************************************************************************************/
【*】 引脚分配

FLASH								SPI 1
		CLK	<--->	PA5 （SCK）
		DO	<---> 	PA6 （MISO）
		DIO	<---> 	PA7 （MOSI）
		CS	<---> 	PA4 （NSS）

 * 对于霸道V2板来说，只是板子原理图FLASH的接口命名有些不同，本质是一样的。


串口：

	CH340G  TXD  <----->  USART1  RX  (PA9)
	CH340G  RXD  <----->  USART1  TX  (PA10)


 * 开发板中的CH340G的收发引脚默认通过跳帽连接到USART1， 如果想使用其他串口，
   可以把 CH340G 跟 USART1 直接的连接跳帽拔掉，然后再把其他串口的 IO用杜邦线接到CH340G 的收发引脚即可。


				
/*********************************************************************************************/
【*】程序描述：

< main.c >

FatFs多项功能测试
	
	1.利用f_getfree获取设备存储信息
	2.通过指针获取结构体成员，计算出总扇区个数和空扇区个数，输出提示信息
	3.创建并打开对应文件，向文件中写入数据
	4.成功后，再对文件写入数据后，读取文件所有内容到缓存区
	4.1成功后，输出读到的文件内容，然后关闭文件
	4.2尝试打开对应的目录，若打开失败，则新创建一个，打开成功则关闭目录并删除TestDir下的testdir.txt文件
	4.3前面操作成功后，把我们之前创建的‘’FatFs 功能测试文件.txt‘’重命名为‘’testdir.txt‘’
	    并移动到TestDir路径下；若失败，则输出提示信息
	5.打开文件失败，输出提示信息
	6.返回文件状态信息

文件信息获取

	1.获取文件信息
	2.成功后输出通过fno指向的对应结构体输出提示信息
	3.返回文件状态信息

路径扫描

	1.创建数组用于存储文件的文件名
	2.打开对应路径，打开成功后获取路径的名字，利用For循环读取所有的项目
	3.利用fn获取FILINFO结构体成员信息，跳过当前的目录，然后判断当前文件是否为文件夹，
	   获取此文件夹下可能存在的文件夹和文件夹的文件夹等，然后合成完整的目录名
	3.1当打开文件夹失败时则跳出循环
	4.当前文件不是文件夹，直接输出文件名
	5.返回文件状态信息

	fpath是一个包含100 个元素的字符型数组，并将其赋值为SPI Flash芯片物理编号对于的根目录。
	这样允许scan_files函数见打印SPIFlash 芯片内FatFs所有文件到串口调试助手。
	注意，这里的定义fpaht数组是必不可少的，因为scan_files 函数本身是个递归函数，
	要求实际参数有较大空间的缓存区，所以栈空间要定义的大一点


主函数

	1.初始化串口，输出提示信息
	2.开始挂载文件系统，若不成功，则输出提示信息，然后停止操作；若成功，也输出对应的提示信息
	3.调用前面写过的FatFs多项功能测试、文件信息获取、路径扫描函数对FatFs进行多项功能测试
	4.取消挂载文件系统

	fpath是一个包含100 个元素的字符型数组，并将其赋值为SPI Flash芯片物理编号对于的根目录。
	这样允许scan_files函数见打印SPIFlash 芯片内FatFs所有文件到串口调试助手。
	注意，这里的定义fpaht数组是必不可少的，因为scan_files 函数本身是个递归函数，要求实际参数有较大空间的缓存区


 * 关于FatFs文件系统本身的一些函数的介绍，写在了FatFs文件系统移植的readme中。 



/*********************************************************************************************/
函数介绍：

f_getfree ：设备空闲簇信息获取
形参：
	1.逻辑设备编号
	2.返回空闲簇数量的指针，这里1簇等于1个扇区，指向即用来存储剩余多少个扇区的指针
	3.指向文件系统对象的指针

f_lseek ：文件定位
形参：
	1.文件对象指针
	2.需要定位的字节数，这个字节数是相对文件起始位置的

f_printf ：格式化写入，它将数据直接写入到文件中，
	需要把 ffconf.h 文件中的 _USE_STRFUNC 配置为 1 才支持

f_opendir ：打开路径，如果路径不存在则创建
形参：
	1.指向路径对象的指针
	2.路径

f_readdir ：读取路径下的文件或者文件夹，并保存信息到文件信息对象变量内；
	  能够自动读取下一个文件对象，循序运行该函数可以读取该路径下的所有文件
形参：
	1.指向路径对象变量的指针
	2.为指向文件信息对象的指针

f_closedir ：关闭已经打开的路径
形参：
	1.指向路径对象的指针

f_mkdir ： 创建路径
形参：
	1.指定路径

f_rename ：带有移动功能的重命名函数
形参：
	1.源文件名称
	2.目标名称，目标名称可附带路径，如果路径与源文件路径不同则移动文件到目标路径下

f_stat ：获取文件的属性
形参：
	1.文件路径
	2.指向文件信息结构体变量的指针

 * 文件信息结构体变量包含文件的大小、最后修改时间和日期、文件属性、短文件名以及长文件名等信息。



/*********************************************************************************************/

【*】 联系我们

-野火官网  :https://embedfire.com
-野火论坛  :http://www.firebbs.cn
-野火商城  :https://yehuosm.tmall.com/
-野火资料下载中心：http://doc.embedfire.com/products/link

/*********************************************************************************************/